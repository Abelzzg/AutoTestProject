<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 24.4.1">

    <issue
        id="MissingPermission"
        severity="Error"
        message="Missing permissions required by KeyguardManager.KeyguardLock.disableKeyguard: android.permission.DISABLE_KEYGUARD"
        category="Correctness"
        priority="9"
        summary="Missing Permissions"
        explanation="This check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash.

Furthermore, for permissions that are revocable (with targetSdkVersion 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime."
        errorLine1="            lock.disableKeyguard();"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/zzg/robotium/lib/MyTestCase.java"
            line="56"
            column="13"/>
    </issue>

    <issue
        id="MissingPermission"
        severity="Error"
        message="Missing permissions required by WifiManager.setWifiEnabled: android.permission.CHANGE_WIFI_STATE"
        category="Correctness"
        priority="9"
        summary="Missing Permissions"
        explanation="This check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash.

Furthermore, for permissions that are revocable (with targetSdkVersion 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime."
        errorLine1="   wifiManager.setWifiEnabled(turnedOn);"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/robotium/solo/SystemUtils.java"
            line="56"
            column="4"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` *without specifying an explicit locale* is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is *not* `I`.

If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="    stringToReturn.append(&quot; &quot; + string.toLowerCase());"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/robotium/solo/WebUtils.java"
            line="330"
            column="40"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` *without specifying an explicit locale* is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is *not* `I`.

If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="    stringToReturn.append(string.toLowerCase());"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/robotium/solo/WebUtils.java"
            line="333"
            column="34"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.

To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 21"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/build.gradle"
            line="64"
            column="9"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Warning"
        message="Do not hardcode &quot;`/data/`&quot;; use `Context.getFilesDir().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.

Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        errorLine1=" public static String Input_LogPath=&quot;/data/data/&quot;+Input_TargetTestPakage+&quot;/Result/&quot;;"
        errorLine2="                                    ~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/zzg/robotium/lib/InputDataStore.java"
            line="8"
            column="37"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Warning"
        message="Do not hardcode &quot;`/data/`&quot;; use `Context.getFilesDir().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.

Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        errorLine1=" public static String Input_LogImagePath=&quot;/data/data/&quot;+Input_TargetPakage+&quot;._test&quot;+&quot;/Result/Image/&quot;;"
        errorLine2="                                         ~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/zzg/robotium/lib/InputDataStore.java"
            line="9"
            column="42"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Warning"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).

Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        errorLine1=" private DateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd-HH-mm-ss&quot;);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/zzg/robotium/lib/CrashHandler.java"
            line="46"
            column="33"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Warning"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).

Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        errorLine1="  SimpleDateFormat sdf = new SimpleDateFormat(&quot;ddMMyy-hhmmss&quot;);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/robotium/solo/ScreenshotTaker.java"
            line="261"
            column="26"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="Old buildToolsVersion 23.0.1; recommended version is 23.0.2 or later"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    buildToolsVersion &quot;23.0.1&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/build.gradle"
            line="59"
            column="5"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `versionCode` value (`1`) is not used; it is always overridden by the value specified in the Gradle build script (`1`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="    android:versionCode=&quot;1&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/AndroidManifest.xml"
            line="4"
            column="5"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `versionName` value (`1.0`) is not used; it is always overridden by the value specified in the Gradle build script (`1.0`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="    android:versionName=&quot;1.0&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/AndroidManifest.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="SetJavaScriptEnabled"
        severity="Warning"
        message="Using `setJavaScriptEnabled` can introduce XSS vulnerabilities into you application, review carefully."
        category="Security"
        priority="6"
        summary="Using `setJavaScriptEnabled`"
        explanation="Your code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support."
        url="http://developer.android.com/guide/practices/security.html"
        urls="http://developer.android.com/guide/practices/security.html"
        errorLine1="      webView.getSettings().setJavaScriptEnabled(true);"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/robotium/solo/RobotiumWebClient.java"
            line="56"
            column="7"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one of: Context.POWER_SERVICE, Context.WINDOW_SERVICE, Context.LAYOUT_INFLATER_SERVICE, Context.ACCOUNT_SERVICE, Context.ACTIVITY_SERVICE, Context.ALARM_SERVICE, Context.NOTIFICATION_SERVICE, Context.ACCESSIBILITY_SERVICE, Context.CAPTIONING_SERVICE, Context.KEYGUARD_SERVICE, Context.LOCATION_SERVICE, Context.SEARCH_SERVICE, Context.SENSOR_SERVICE, Context.STORAGE_SERVICE, Context.WALLPAPER_SERVICE, Context.VIBRATOR_SERVICE, Context.CONNECTIVITY_SERVICE, Context.NETWORK_STATS_SERVICE, Context.WIFI_SERVICE, Context.WIFI_P2P_SERVICE, Context.NSD_SERVICE, Context.AUDIO_SERVICE, Context.FINGERPRINT_SERVICE, Context.MEDIA_ROUTER_SERVICE, Context.TELEPHONY_SERVICE, Context.TELEPHONY_SUBSCRIPTION_SERVICE, Context.CARRIER_CONFIG_SERVICE, Context.TELECOM_SERVICE, Context.CLIPBOARD_SERVICE, Context.INPUT_METHOD_SERVICE, Context.TEXT_SERVICES_MANAGER_SERVICE, Context.APPWIDGET_SERVICE, Context.DROPBOX_SERVICE, Context.DEVICE_POLICY_SERVICE, Context.UI_MODE_SERVICE, Context.DOWNLOAD_SERVICE, Context.NFC_SERVICE, Context.BLUETOOTH_SERVICE, Context.USB_SERVICE, Context.LAUNCHER_APPS_SERVICE, Context.INPUT_SERVICE, Context.DISPLAY_SERVICE, Context.USER_SERVICE, Context.RESTRICTIONS_SERVICE, Context.APP_OPS_SERVICE, Context.CAMERA_SERVICE, Context.PRINT_SERVICE, Context.CONSUMER_IR_SERVICE, Context.TV_INPUT_SERVICE, Context.USAGE_STATS_SERVICE, Context.MEDIA_SESSION_SERVICE, Context.BATTERY_SERVICE, Context.JOB_SCHEDULER_SERVICE, Context.MEDIA_PROJECTION_SERVICE, Context.MIDI_SERVICE"
        category="Security"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="  ((ActivityManager)activityUtils.getCurrentActivity().getSystemService(&quot;activity&quot;)).getMemoryInfo(mi);"
        errorLine2="                                                                        ~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/robotium/solo/Asserter.java"
            line="127"
            column="73"/>
    </issue>

    <issue
        id="WorldReadableFiles"
        severity="Warning"
        message="Using `MODE_WORLD_READABLE` when creating files can be risky, review carefully"
        category="Security"
        priority="4"
        summary="`openFileOutput()` or similar call passing `MODE_WORLD_READABLE`"
        explanation="There are cases where it is appropriate for an application to write world readable files, but these should be reviewed carefully to ensure that they contain no private data that is leaked to other applications."
        errorLine1="            return mTargetContext.openFileOutput(fileName, Context.MODE_WORLD_READABLE);"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/zutubi/android/junitreport/JUnitReportListener.java"
            line="204"
            column="68"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="Should explicitly set `android:allowBackup` to `true` or `false` (it&apos;s `true` by default, and that can have some security implications for the application&apos;s data)"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup

By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.

This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.

Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.

To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.

If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/preview/backup/index.html"
        urls="https://developer.android.com/preview/backup/index.html,http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application"
        errorLine2="    ^"
        quickfix="studio,adt">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/AndroidManifest.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="HandlerLeak"
        severity="Warning"
        message="This Handler class should be static or leaks might occur (com.robotium.solo.ScreenshotTaker.ScreenShotSaver)"
        category="Performance"
        priority="4"
        summary="Handler reference leaks"
        explanation="Since this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a Looper or MessageQueue for a thread other than the main thread, then there is no issue. If the Handler is using the Looper or MessageQueue of the main thread, you need to fix your Handler declaration, as follows: Declare the Handler as a static class; In the outer class, instantiate a WeakReference to the outer class and pass this object to your Handler when you instantiate the Handler; Make all references to members of the outer class using the WeakReference object."
        errorLine1=" private class ScreenShotSaver extends Handler {"
        errorLine2="               ~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/robotium/solo/ScreenshotTaker.java"
            line="405"
            column="16"/>
    </issue>

    <issue
        id="GoogleAppIndexingWarning"
        severity="Warning"
        message="App is not indexable by Google Search; consider adding at least one Activity with an ACTION-VIEW intent-filler. See issue explanation for more details."
        category="Usability"
        priority="5"
        summary="Missing support for Google App Indexing"
        explanation="Adds deep links to get your app into the Google index, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="    &lt;application"
        errorLine2="    ^">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/AndroidManifest.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Warning"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`
* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.
* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.
* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html"
        errorLine1="      editText.setText(previousText + text);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/yo/AndroidStudioProjects/AutoTestExample/app/src/main/java/com/robotium/solo/TextEnterer.java"
            line="58"
            column="24"/>
    </issue>

</issues>
